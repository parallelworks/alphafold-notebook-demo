Bootstrap: docker
From: tensorflow/tensorflow:latest-gpu-jupyter

%help
#	This Singularity definition contains a TensorFlow-gpu
#	installation and ColabFold for use in batch mode and
#	interactive testing. Some contents here are based on the
#	Alphafold Container
%files
%post
# Copyright 2021 DeepMind Technologies Limited
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#=========================================================

apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
build-essential \
cmake \
cuda-command-line-tools-11-1 \
git \
hmmer \
kalign \
tzdata \
wget \
&& rm -rf /var/lib/apt/lists/*

# Compile HHsuite from source.
# HAVE_AVX2 is an essential flag for AMD chips
/bin/rm -rf /tmp/hh-suite \
&& git clone --branch v3.3.0 https://github.com/soedinglab/hh-suite.git /tmp/hh-suite \
&& mkdir /tmp/hh-suite/build \
&& cd /tmp/hh-suite/build \
&& cmake -DCMAKE_INSTALL_PREFIX=/opt/hhsuite -DHAVE_AVX2=1 .. \
&& make -j 4 && make install \
&& ln -s /opt/hhsuite/bin/* /usr/bin \
&& cd / \
&& /bin/rm -rf /tmp/hh-suite

#=================================
# Old Colabfold install location
# Runs, but after Conda is installed,
# the first Python path is the Python
# in Conda, which does not
# have ColabFold installed.  So,
# install ColabFold into the Conda environment.
# 
# Install Colabfold directly (without Conda)
#/usr/bin/python3 -m pip install --upgrade pip \
#&& pip install -q --no-warn-conflicts "colabfold[alphafold-minus-jax] @ git+https://github.com/sokrypton/ColabFold"
#
## Jax 3.20 is already preinstalled in this container
## so this additional Colabfold requirement is unnecessary.
##pip install -q "jax[cuda11_cudnn805]>=0.3.8,<0.4" -f https://storage.googleapis.com/jax-releases/jax_releases.html
#================================

# Install Miniconda package manager.
wget -q -P /tmp \
https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh \
&& bash /tmp/Miniconda3-latest-Linux-x86_64.sh -b -p /opt/conda \
&& rm /tmp/Miniconda3-latest-Linux-x86_64.sh \
&& PATH="/opt/conda/bin:$PATH" \

# Install conda packages.
# Forcing install of older Python (3.7)
# on top of newer Python (3.9 in Conda) breaks things.
conda update -qy conda \
&& conda install -y -c conda-forge -c bioconda \
openmm=7.5.1 \
pdbfixer \
kalign2=2.04
#python=3.7

# Install Colabfold directly without Conda
# but scripts will be in the Conda environment
# installed above. Always run pip after conda
# and no back and forth.
python3 -m pip install --upgrade pip \
&& pip install -q --no-warn-conflicts "colabfold[alphafold-minus-jax] @ git+https://github.com/sokrypton/ColabFold"

### /bin/cp -r . /app/alphafold

#wget -q -P /app/alphafold/alphafold/common/ \
#https://git.scicore.unibas.ch/schwede/openstructure/-/raw/7102c63615b647#35c4941278d92b554ec94415f8/modules/mol/alg/src/stereo_chemical_props.txt

# Apply OpenMM patch.
#cd /opt/conda/lib/python3.7/site-packages
#patch -p0 < /app/alphafold/docker/openmm.patch

# Add SETUID bit to the ldconfig binary so that non-root users can run it.
chmod u+s /sbin/ldconfig.real

%environment
export PATH="/opt/conda/bin:$PATH"
%runscript
ldconfig
/bin/bash
